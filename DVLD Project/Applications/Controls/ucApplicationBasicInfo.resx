<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        p229PZ3ttzgOAAAb1fWu0zTV8E5n84ZU/ftt/XZiPcZdGKvvU6cbpYoDAMBGdb3rNE01vFPlGqn6t52+
        NbEeV0wfS9X3alvjfgIVBwCAjep612maaninyrek6t9u6xPpaol1eUmqvl/b+uVUcQAA2Kiud52mqYZ3
        qjwuVf92Wy9PrM/DUvX92tbZXgfgAACwUV3vOk1TDe9UeU2q/u22HpVYn1uk6vvV6QbpTA4AABvV9a7T
        NNXwTmcat//9aKr+7bZumVif8TTGcXOf6nu2rTumMzkAAGxU17tO01TDO51p/MRX/bttjb//j5sHsU7P
        S9X3bVs/kM7kAACwUV3vOk1TDe90pjuk6t9ta7xtkPX6iVR937b1hHQmBwCAjep612maaninMz0oVf9u
        W7+SWK+7p+r7tq0/TmdyAADYqK53naaphnc603gSXPXvtvXQxHp9Xqq+b9t6VzqTAwDARnW96zRNNbzT
        nc7oFan6d9v66XTmLK2npfd2GI2bO33qrKX3FXAAAPZRdb3rNE01XFpTDgDAPqqud52mqYZLa8oBANhH
        1fWu0zTVcGlNOQAA+6i63nWaphourSkHAGAfVde7TtNUw6U15QAA7KPqetdpmmq4tKYcAIB9VF3vOk1T
        DZfW1O0TwL6prnedpqmGS2vq5glg31TXu07TVMOltfSRdJkEsG+qa16naarh0loatw8G2EfVNa/TNNVw
        aQ19MI3HTAPso+q612maarh00p2T7pwA9lV17es0TTVcOslelb40Aeyz6vrXaZpqeKdnShN7YnpEumW6
        YALYd9Xe2mmaangnAGC5am/tNE01vBMAsFy1t3aaphreCQBYrtpbO01TDe8EACxX7a2dpqmGdwIAlqv2
        1k7TVMM7AQDLVXtrp2mq4Z0AgOWqvbXTNNXwTgDActXe2mmaangnAGC5am/tNE01vBMAsFy1t3aaphre
        CQBYrtpbO01TDe8EACxX7a2dpqmGdwIAlqv21k7TVMM7AQDLVXtrp2mq4Z0AgOWqvbXTNNXwTgDActXe
        2mmaangnAGC5am/tNE01vBMAsFy1t3aaphreCQBYrtpbO01TDe8EACxX7a2dpqmGdwIAlqv21k7TVMM7
        AQDLVXtrp2mq4Z0AgOWqvbXTNNXwTgDActXe2mmaangnAGC5am/tNE01vBMAsFy1t3aaphreCQBYrtpb
        O01TDe8EACxX7a2dpqmGdwIAlqv21k7TVMM7AQDLVXtrp2mq4Z0AgOWqvbXTNNXwTgDActXe2mmaangn
        AGC5am/tNE01vBMAsFy1t3aaphreCQBYrtpbO01TDe8EACxX7a2dpqmGdwIAlqv21k7TVMM7AQDLVXtr
        p2mq4Z0AgOWqvbXTNNXwTgDActXe2mmaangnAGC5am/tNE01vBMAsFy1t3aaphreCQBYrtpbO01TDe8E
        ACxX7a2dpqmGdwIAlqv21k7TVMM7AQDLVXtrp2mq4Z0AgOWqvbXTNNXwTgDActXe2mmaanintbtq+s70
        M+mZkqRT0bjm3zuNPWDtqr210zTV8E5rdeH0yPShVK1bkrT/jT3gh9OF0lpV6+40TTW80xqNzf+3U7Ve
        SdLp6zlp7A1rVK230zTV8E5r9N9StVZJ0untx9IaVWvtNE01vNPafGY6J1VrlSSd3j6SrpnWplprp2mq
        4Z3W5gGpWqckSfdPa1Ots9M01fBOa/OUVK1TkqQnpbWp1tlpmmp4p7V5dqrWKUnS2CPWplpnp2mq4Z3W
        5jGpWqckST+X1qZaZ6dpquGd1uYuqVqnJEl3TmtTrbPTNNXwTmtzifTmVK1VknR6+/t08bQ21Vo7TVMN
        77RGd0yfSNV6JUmnr7EnfH1ao2q9naaphndaq+9OH03VmiVJp6exF9wnrVW15k7TVMM7rdkXpuelj6dq
        7ZKk/W1c+5+bbpbWrFp7p2mq4Z12wZXTV6Q7SZJOReOaP679u6DaWztNUw3vBAAsV+2tnaaphncCAJar
        9tZO01TDOwEAy1V7a6dpquGdAIDlqr210zTV8E4AwHLV3tppmmp4JwBguWpv7TRNNbwTALBctbd2mqYa
        3gkAWK7aWztNUw3vBAAsV+2tnaaphncCAJar9tZO01TDOwEAy1V7a6dpquGdAIDlqr210zTV8E4AwHLV
        3tppmmp4JwBguWpv7TRNNbwTALBctbd2mqYa3gkAWK7aWztNUw3vBAAsV+2tnaaphncCAJar9tZO01TD
        OwEAy1V7a6dpquGdAIDlqr210zTV8E4AwHLV3tppmmp4JwBguWpv7TRNNbwTALBctbd2mqYa3gkAWK7a
        WztNUw3vBAAsV+2tnaaphncCAJar9tZO01TDOwEAy1V7a6dpquGdAIDlqr210zTV8E4AwHLV3tppmmp4
        JwBguWpv7TRNNbzT2l0xfVt6dHpaeqYkaa8b1/pxzb9HGnvA2lV7a6dpquGd1upC6WHpA6latyRp/xt7
        wEPSBdNaVevuNE01vNMajc3/11O1XknS6evX0tgb1qhab6dpquGd1uhRqVqrJOn09iNpjaq1dpqmGt5p
        ba6ZPpKqtUqSTm8fTtdIa1OttdM01fBOa3P/VK1TkqT7pbWp1tlpmmp4p7V5cqrWKUnSE9PaVOvsNE01
        vNPaPDtV65QkaewRa1Ots9M01fBOa/PYVK1TkqT/mdamWmenaarhndbmrqlapyRJ35TWplpnp2mq4Z3W
        5pLpralaqyTp9PbmdIm0NtVaO01TDe+0RndOn0jVeiVJp6+xJ3xjWqNqvZ2mqYZ3WqvxVo+PpWrNkqTT
        09gL7pvWqlpzp2mq4Z3W7BbpRclvAyTp9DWu/b+fvjitWbX2TtNUwzvtgqunr0l3kiSdisY1f1z7d0G1
        t3aaphreCQBYrtpbO01TDe8EACxX7a2dpqmGdwIAlqv21k7TVMM7AQDLVXtrp2mq4Z0AgOWqvbXTNNXw
        TgDActXe2mmaangnAGC5am/tNE01vBMAsFy1t3aaphreCQBYrtpbO01TDe8EACxX7a2dpqmGdwIAlqv2
        1k7TVMM7AQDLVXtrp2mq4Z0AgOWqvbXTNNXwTgDActXe2mmaangnAGC5am/tNE01vBMAsFy1t3aaphre
        CQBYrtpbO01TDe8EACxX7a2dpqmGdwIAlqv21k7TVMM7AQDLVXtrp2mq4Z0AgOWqvbXTNNXwTgDActXe
        2mmaangnAGC5am/tNE01vBMAsFy1t3aaphreCQBYrtpbO01TDe8EACxX7a2dpqmGdwIAlqv21k7TVMM7
        AQDLVXtrp2mq4Z0AgOWqvbXTNNXwTgDActXe2mmaangnAGC5am/tNE01vBMAsFy1t3aaphreCQBYrtpb
        O01TDe8EACxX7a2dpqmGdwIAlqv21k7TVMM7AQDLVXtrp2mq4Z0AgOWqvbXTNNXwTgDActXe2mmaangn
        AGC5am/tNE01vBMAsFy1t3aaphreCQBYrtpbO01TDe8EACxX7a2dpqmGdwIAlqv21k7TVMM7AQDLVXtr
        p2mq4Z0AgOWqvbXTNNXwTgDActXe2mmaangnAGC5am/tNM1HUvUBtnWRBAAc3NhDq711W2PPnuadqfog
        27pCAgAO7oqp2lu39Y40zd+k6oNs6wYJADi4G6Zqb93WG9M0f56qD7Kt2ycA4ODukKq9dVsvT9P8Sqo+
        yLZ+KAEAB/eQVO2t23pWmuZHUvVBtvWCBAAc3P9O1d66rYenae6eqg+yrfFKRC8EBICDGS8APCdVe+u2
        7pamuXGqPkin+yQAoO97UrWndpr6Avzzp7el6gNt6xVp/PcAwHYXSK9M1Z66rbek6Xvu01P1wTqNVzIC
        ANt9Q6r20k5PTdMtfR3A6DXpogkAOLuLpdenai/t9C1pusukD6TqA3Z6cAIAzu6hqdpDO70/XSodiael
        6oN2+mj60gQA/EtflsZeWe2hnZ6cjsytUvVBu40XJ1wrAQAb105vTdXe2e2W6Ui9LFUfuNtr09USAHDu
        nvi6VO2Z3V6ajtwdU/XBD9Jfp+slADjNrp/Gw3uqvfIg3S4dufH+xKUPB/rU3pW8PRCA0+rr07tTtUce
        pD9Nx3a/nfFivk+kaiEHacx4fLpSAoDT4MrpCWnGPvrxdPN0rMbGXS1mSeO3AeNtgpdLALCPLp/GU3Jn
        /NT/yR6Xjt34qf2wr1g8s/elJ6avThdPALDLLpH+XXpSGu/Tr/a+pb05jYcGnYjxloPx64dqYYftw+lF
        6THpgele6U6SJK24sVeNPWvsXeNxvmMvq/a4w/ax9OXpRB3mrkWSJOng/Zd04i6YnpWqBUqSpLk9I413
        5K3CRdLvpmqhkiRpTs9Pq3u43mXTS1K1YEmSdLhenMaD+Vbpkuk5qVq4JEla1vPSpdOqjT8HPCVVn4Ak
        STpY46ZBF047427pg6n6ZCRJ0nn3oXS/tJM+L42n/1WfmCRJqnt1+ty008avLcYJZvYdkCRJ2rfGb84f
        klb3Sv/DuHZ6ejqqOwdKkrSrjTv7PTVdK+2tz07jBQ3npOqLIEnSaWnshePhetdPp8YV0rhn8h+k6osi
        SdK+9qr0oHSVdKpdN907jdsb/kOqvliSJO1qb0vjz+DjB9/rJM7iyunL0j3Tw9JPpMemZ0qStOLGXjX2
        rPGgvLGHjb1sPD4fAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoOF85/t/MFqFOvOkCkgAAAAA
        SUVORK5CYII=
</value>
  </data>
</root>